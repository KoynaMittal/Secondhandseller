[{"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\index.js":"1","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\RegisterScreen.js":"2","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Header.js":"3","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\UserListScreen.js":"4","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Footer.js":"5","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Product.js":"6","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\Landing.js":"7","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\EmailVerificationScreen.js":"8","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\reducers\\userReducer.js":"9","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\ProductCreateScreen.js":"10","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\actions\\productActions.js":"12","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\types\\userConstants.js":"13","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\FormContainer.js":"14","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\ProductScreen.js":"15","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\NotFoundScreen.js":"16","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\types\\productConstants.js":"17","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Meta.js":"18"},{"size":300,"mtime":1669457912498,"results":"19","hashOfConfig":"20"},{"size":5413,"mtime":1669469049761,"results":"21","hashOfConfig":"20"},{"size":2757,"mtime":1669457912496,"results":"22","hashOfConfig":"20"},{"size":3128,"mtime":1669457912502,"results":"23","hashOfConfig":"20"},{"size":330,"mtime":1669469049757,"results":"24","hashOfConfig":"20"},{"size":866,"mtime":1669628043892,"results":"25","hashOfConfig":"20"},{"size":2555,"mtime":1669628043895,"results":"26","hashOfConfig":"20"},{"size":1143,"mtime":1669457912499,"results":"27","hashOfConfig":"20"},{"size":4768,"mtime":1669457912499,"results":"28","hashOfConfig":"20"},{"size":6932,"mtime":1669457912500,"results":"29","hashOfConfig":"20"},{"size":3839,"mtime":1669457912498,"results":"30","hashOfConfig":"20"},{"size":5786,"mtime":1669457912494,"results":"31","hashOfConfig":"20"},{"size":1796,"mtime":1669457912503,"results":"32","hashOfConfig":"20"},{"size":351,"mtime":1669457912496,"results":"33","hashOfConfig":"20"},{"size":13722,"mtime":1669457912501,"results":"34","hashOfConfig":"20"},{"size":678,"mtime":1669457912500,"results":"35","hashOfConfig":"20"},{"size":1364,"mtime":1669457912503,"results":"36","hashOfConfig":"20"},{"size":561,"mtime":1669457912497,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"aezaf1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\index.js",[],["84","85"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\RegisterScreen.js",["86"],"import React, { useState, useEffect } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { verify } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [contact, setContact] = useState('')\r\n\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const userVerification = useSelector((state) => state.userVerification)\r\n  const { verification, loading, error } = userVerification\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const {\r\n    userData,\r\n    loading: loadingRegister,\r\n    error: errorRegister,\r\n  } = userRegister\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  useEffect(() => {\r\n    if (userData) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, redirect, userData])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } else {\r\n      dispatch(verify(name, email, password, contact, address))\r\n    }\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>SIGN UP</h1>\r\n      <Form onSubmit={submitHandler} className='mt-5'>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>\r\n            Email Address{' '}\r\n            <small className='slanted'>\r\n              {' '}\r\n              *Be sure to enter your valid email address\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label> Address</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='contact No'>\r\n          <Form.Label>\r\n            Mobile No{' '}\r\n            <small className='slanted'>\r\n              * Be sure to enter a correct 10 digit number starting with 9\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='contact'\r\n            placeholder='Enter Mobile No'\r\n            value={contact}\r\n            onChange={(e) => setContact(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmpassword'>\r\n          <Form.Label>Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>{' '}\r\n      <Row className='py-3'>\r\n        {/* {!loading && ()} */}\r\n        <Col>\r\n          Already Have an Account?\r\n          <Link\r\n            className='underlined1 '\r\n            to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n          >\r\n            <span className='btn-primary mb-3 '> Login</span>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {loading && (\r\n        <Spinner\r\n          animation='border'\r\n          role='status'\r\n          variant='danger'\r\n          style={{\r\n            width: '100px',\r\n            margin: 'auto',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n          }}\r\n        />\r\n      )}\r\n      {verification && (\r\n        <Message variant='success'>Successfully registered</Message>\r\n      )}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {errorRegister && <Message variant='danger'>{errorRegister}</Message>}\r\n      {loadingRegister && <Loader />}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Header.js",[],["87","88"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\UserListScreen.js",[],["89","90"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Footer.js",[],["91","92"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Product.js",["93","94"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\Landing.js",["95","96","97","98","99"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../types/productConstants'\r\nimport {\r\n  MDBCard,\r\n  MDBCardImage,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol\r\n} from 'mdb-react-ui-kit';\r\nconst Landing = ({  match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userData } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {keyword && (\r\n        <Link className='btn btn-success' to='/'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h3> Latest Items On Sale</h3>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <LinkContainer to={userData ? '/createproduct' : '/login'}>\r\n            <Button className='btn-primary  '>\r\n              <i style={{ color: 'white' }} className='fas fa-plus'></i>{' '}\r\n              <span className='textcolor'>List Your Product</span>\r\n            </Button>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <MDBRow className='row-cols-1 row-cols-md-3 g-4'>\r\n            {products.map((product) => (\r\n              <MDBCol key={product._id} >\r\n                <Product product={product} />\r\n              </MDBCol>\r\n            ))}\r\n          </MDBRow>\r\n          <Paginate\r\n            className='paginate'\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default Landing\r\n",["100","101"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\EmailVerificationScreen.js",["102","103","104","105"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\reducers\\userReducer.js",[],["106","107"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\ProductCreateScreen.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\actions\\productActions.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\types\\userConstants.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\ProductScreen.js",["108"],"import React, { useState, useEffect } from 'react'\r\nimport Meta from '../components/Meta'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { sendEmail } from '../actions/userActions'\r\nimport { PRODUCT_REVIEW_RESET } from '../types/productConstants'\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [text, setText] = useState('')\r\n  const [comment, setComment] = useState('')\r\n\r\n  const [sendMail, setSendMail] = useState(false)\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const emailReducer = useSelector((state) => state.emailReducer)\r\n  const {\r\n    loading: loadingEmail,\r\n    error: errorEmail,\r\n    data: dataEmail,\r\n  } = emailReducer\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    loading: loadingReview,\r\n    error: errorReview,\r\n    success: successReview,\r\n  } = productReviewCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userData } = userLogin\r\n  useEffect(() => {\r\n    if (successReview) {\r\n      setComment('')\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_RESET,\r\n      })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [match.params.id, dispatch, successReview])\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, comment))\r\n  }\r\n  const emailSubmit = (e) => {\r\n    e.preventDefault()\r\n    setEmailSent(true)\r\n\r\n    dispatch(\r\n      sendEmail(\r\n        product?.seller?.selleremail,\r\n        text,\r\n        userData?.name,\r\n        userData?.address,\r\n        product?.name,\r\n        userData?.email,\r\n        userData?.contact?.phone_no\r\n      )\r\n    )\r\n\r\n    setText('')\r\n\r\n    setSendMail(false)\r\n    setTimeout(() => {\r\n      setEmailSent(false)\r\n    }, 10000)\r\n  }\r\n  const sendEMAIL = () => {\r\n    setSendMail(true)\r\n  }\r\n  const cancelHandler = () => {\r\n    setSendMail(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/' className='btn btn-success my-3'>\r\n        Go Back\r\n      </Link>\r\n      <br />\r\n      {userData && userData._id === product.user && (\r\n        <Link\r\n          to={`/admin/product/${match.params.id}/edit`}\r\n          className='btn btn-primary my-3'\r\n        >\r\n          Edit Product\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row className='row mb-2'>\r\n            <Col md={6} className='image-area'>\r\n              <Carousel>\r\n                {product.images.map((image) => (\r\n                  <Carousel.Item key={image._id}>\r\n                    <Image\r\n                      className='d-block w-100'\r\n                      src={image?.image1}\r\n                      alt='First slide'\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Col>\r\n\r\n            <Col className='borderaround setheight' md={6}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> General Details\r\n              </p>\r\n\r\n              <Row>\r\n                <Col className='product  ' md={4} sm={4} xs={4}>\r\n                  <ul>\r\n                    <li> Product Id:</li>\r\n\r\n                    <li> Posted On:</li>\r\n                    <li> Expires On:</li>\r\n                    <li> Product:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={8} xs={8}>\r\n                  <ul>\r\n                    <li>{product._id}</li>\r\n\r\n                    <li>{product?.createdAt?.substring(0, 10)}</li>\r\n                    <li>{product?.expiresOn?.substring(0, 10)}</li>\r\n                    <li> {product.name}</li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          {loadingEmail && <Loader />}\r\n          {errorEmail && <Message variant='danger'>{errorEmail}</Message>}\r\n          {/* {console.log(dataEmail?.response)} */}\r\n          {dataEmail && emailSent && (\r\n            <Message variant='success'>{dataEmail.response}</Message>\r\n          )}\r\n          {sendMail && userData && (\r\n            <Row id='email' className='mt-5'>\r\n              <Col md={10} sm={12} className='formAround'>\r\n                <Form onSubmit={emailSubmit}>\r\n                  <div className='text-area1'>\r\n                    <span className='text-area2'>Send Email</span>\r\n\r\n                    <p className='text-area3'>\r\n                      Get in touch with {product?.seller?.sellername}\r\n                    </p>\r\n                  </div>\r\n                  <Row>\r\n                    <Col md={4} sm={4} xs={4}>\r\n                      <ul className='marginshift'>\r\n                        <p>{''}</p>\r\n                        <br />\r\n                        <li className='mt-2'>Your Name:</li>\r\n                        <li>Your Email:</li>\r\n                        <li>Your Phone No:</li>\r\n                        <li>Your Message:</li>\r\n                      </ul>\r\n                    </Col>\r\n                    <Col md={8} sm={8} xs={8}>\r\n                      <p className='cross'>\r\n                        <button\r\n                          onClick={cancelHandler}\r\n                          className=' cancel m-auto '\r\n                        >\r\n                          {' '}\r\n                          <i className='far fa-window-close'></i>\r\n                        </button>\r\n                      </p>\r\n                      <li>{userData.name}</li>\r\n                      <li>{userData.email}</li>\r\n                      <li>{userData?.contact?.phone_no}</li>\r\n                      <li>\r\n                        <textarea\r\n                          style={{ maxWidth: '100%', borderRadius: '5px' }}\r\n                          id='w3review'\r\n                          name='text'\r\n                          value={text}\r\n                          onChange={(e) => setText(e.target.value)}\r\n                          rows='8'\r\n                          cols='55'\r\n                          required\r\n                        />\r\n                      </li>\r\n                    </Col>\r\n                    <button className='button ' type='submit'>\r\n                      Send Email\r\n                    </button>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Seller Details\r\n              </p>\r\n\r\n              <Row className='mb-2'>\r\n                <Col className='product' md={4} sm={2} xs={2}>\r\n                  <ul>\r\n                    <li> Name:</li>\r\n\r\n                    <li> Email:</li>\r\n                    <li> Address:</li>\r\n                    <li>Phone:</li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={10} xs={10}>\r\n                  <ul>\r\n                    <li>{product?.seller?.sellername}</li>\r\n\r\n                    <li>\r\n                      {/* {product?.seller?.selleremail}{' '} */}\r\n                      <span>\r\n                        <button\r\n                          className='emailbutton btn-success'\r\n                          onClick={sendEMAIL}\r\n                        >\r\n                          Send Email\r\n                        </button>\r\n                      </span>\r\n                    </li>\r\n                    <li>{product?.seller?.selleraddress}</li>\r\n                    <li>\r\n                      {product?.seller?.phoneNo?.mobile}{' '}\r\n                      <span>\r\n                        {product?.seller?.phoneNo?.isVerified ? (\r\n                          <span>\r\n                            <i className='fas fa-mobile-alt'></i>\r\n                            <span className='underlined'>verified</span>\r\n                          </span>\r\n                        ) : (\r\n                          <span>\r\n                            <i className='fas fa-mobile-alt'></i>\r\n                            <span className='underlined'>unverified</span>\r\n                          </span>\r\n                        )}{' '}\r\n                      </span>\r\n                    </li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n              {sendMail && !userData && (\r\n                <Message variant='danger'>\r\n                  You need to be logged in to use this feature.{' '}\r\n                  <span>\r\n                    <Link to='/login'>Log In</Link> to Continue\r\n                  </span>\r\n                </Message>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-3'>\r\n            <Col className='borderaround mt-5 ' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Pricing Details\r\n              </p>\r\n              <Row>\r\n                <Col className='product' md={6} sm={6} xs={4}>\r\n                  <ul>\r\n                    <li>Total Price:</li>\r\n                    {product?.Cost?.negotiable && <li>Negotiable:</li>}\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={8}>\r\n                  <ul>\r\n                    <li> Rs {product?.Cost?.price}</li>\r\n                    {product?.Cost?.negotiable && <li>Yes</li>}\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10} sm={12} xs={12}>\r\n              <p className='details '>\r\n                <i className='fas fa-info'></i> Description\r\n              </p>\r\n              <p className='detailsdescription'>{product.description}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Delivery Information\r\n              </p>\r\n              <Row>\r\n                <Col className='product' md={6} sm={6} xs={5}>\r\n                  <ul>\r\n                    <li>Delivery Area:</li>\r\n                    <li>Delivery Charge:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={7}>\r\n                  <ul>\r\n                    <li>{product?.shippingAddress?.address} </li>\r\n                    <li>\r\n                      {' '}\r\n                      Rs {''}\r\n                      {product?.shippingAddress?.shippingCharge}\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-3'>\r\n            <Col md={6}>\r\n              <h4>Buyer's Speak</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant='primary'>Be the First One to Review</Message>\r\n              )}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    {/* <strong>{review.name}</strong>\r\n                    <p>{review.createdAt.substring(0, 10)}</p> */}\r\n                    <p>\r\n                      Q.<span className='comment'> {review.comment} </span>\r\n                      <span className='review'>\r\n                        <span style={{ color: '#32a897', fontWeight: '800' }}>\r\n                          --Posted By <strong>{review.name}</strong> on{' '}\r\n                          <strong> {review.createdAt.substring(0, 10)} </strong>{' '}\r\n                        </span>\r\n                      </span>\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <p>Post Your Speak</p>\r\n                  {errorReview && (\r\n                    <Message variant='danger'>{errorReview}</Message>\r\n                  )}\r\n\r\n                  {loadingReview && <Loader />}\r\n                  {userData ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='comment'>\r\n                        {/* <Form.Label>Comment</Form.Label> */}\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Post\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant='primary'>\r\n                      You must <Link to='/login'>Log In</Link> to post your\r\n                      speak{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n",["109","110"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\screens\\NotFoundScreen.js",["111","112","113"],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\types\\productConstants.js",[],"C:\\Users\\palak\\OneDrive\\Documents\\Secondhandseller\\Frontend\\src\\components\\Meta.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":149,"column":13,"nodeType":"120","messageId":"121","endLine":149,"endColumn":19},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"116","replacedBy":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"116","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":10,"column":3,"nodeType":"130","messageId":"131","endLine":10,"endColumn":9},{"ruleId":"128","severity":1,"message":"133","line":14,"column":3,"nodeType":"130","messageId":"131","endLine":14,"endColumn":10},{"ruleId":"128","severity":1,"message":"134","line":15,"column":3,"nodeType":"130","messageId":"131","endLine":15,"endColumn":15},{"ruleId":"128","severity":1,"message":"135","line":16,"column":3,"nodeType":"130","messageId":"131","endLine":16,"endColumn":14},{"ruleId":"128","severity":1,"message":"136","line":17,"column":3,"nodeType":"130","messageId":"131","endLine":17,"endColumn":15},{"ruleId":"128","severity":1,"message":"137","line":18,"column":3,"nodeType":"130","messageId":"131","endLine":18,"endColumn":14},{"ruleId":"114","replacedBy":"138"},{"ruleId":"116","replacedBy":"139"},{"ruleId":"128","severity":1,"message":"140","line":1,"column":28,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"141","line":3,"column":20,"nodeType":"130","messageId":"131","endLine":3,"endColumn":26},{"ruleId":"128","severity":1,"message":"142","line":3,"column":28,"nodeType":"130","messageId":"131","endLine":3,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":19,"column":6,"nodeType":"145","endLine":19,"endColumn":42,"suggestions":"146"},{"ruleId":"114","replacedBy":"147"},{"ruleId":"116","replacedBy":"148"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":38,"nodeType":"130","messageId":"131","endLine":3,"endColumn":42},{"ruleId":"114","replacedBy":"149"},{"ruleId":"116","replacedBy":"150"},{"ruleId":"128","severity":1,"message":"141","line":3,"column":20,"nodeType":"130","messageId":"131","endLine":3,"endColumn":26},{"ruleId":"128","severity":1,"message":"142","line":3,"column":28,"nodeType":"130","messageId":"131","endLine":3,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":9,"column":9,"nodeType":"153","endLine":9,"endColumn":54},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected",["154"],["155"],["154"],["155"],["154"],["155"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.",["154"],["155"],"'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["156"],["154"],["155"],["154"],["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [history, userData, redirect, token, dispatch]",{"range":"159","text":"160"},[755,791],"[history, userData, redirect, token, dispatch]"]